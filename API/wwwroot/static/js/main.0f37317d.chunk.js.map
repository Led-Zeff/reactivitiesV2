{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/api/errorHandler.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/AppTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/Loading.tsx","app/common/form/AppTextArea.tsx","app/common/form/AppSelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/AppDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChats.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivitiesPane.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/FileWidgetDropzone.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","r","JSON","parse","error","status","errors","toast","title","console","log","method","hasOwnProperty","history","push","modalStateErrors","key","Object","prototype","call","flat","setServerError","handleError","Promise","reject","responseBody","requests","url","get","then","body","put","post","delete","agent","Activities","list","params","detail","id","create","acitivity","update","attend","Accounts","current","login","user","register","fbLogin","accessToken","Profiles","username","profile","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","getFollowings","predicate","getActivities","Activity","init","assign","ActivityFormValues","activity","undefined","category","description","date","city","venue","Profile","displayName","image","ProfileFormValues","bio","ActivityStore","activityRegistry","Map","selectedActivity","loading","loadingIinitial","pagingParams","set","setPagingParams","setPredicate","value","forEach","loadActivites","setLoadingInitial","axiosParams","activities","addToRegistry","setPagination","loadActivity","getActivity","selectActivity","setLoading","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","Date","state","createActivity","attendee","uuid","newActivity","updateActivity","runInAction","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","format","ProfileStore","followings","loadProfile","updateProfile","setDisplayname","photo","photos","isMain","setImage","p","activityStore","followingCount","loadFollowings","loadProfileActivities","map","UserStore","fbAccessToken","fbLoading","creds","setToken","setUser","modalStore","closeModal","logout","getUser","name","imageUrl","setFbAccessToken","window","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","finally","scope","localStorage","getItem","appLoaded","setAppLoaded","setItem","removeItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","Icon","Button","positive","position","Image","src","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","style","width","marginTop","Header","attached","color","active","has","onChange","useState","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","textOverflow","whiteSpace","overflow","extra","styles","borderColor","borderWidth","List","horizontal","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginLeft","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","initialLoad","hasMore","totalPages","Loader","AppTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","marginBottom","ValidationErrors","Message","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","Loading","Dimmer","AppTextArea","AppSelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","AppDateInput","dateFormat","selected","useHistory","useParams","setActivity","nullable","saved","enableReinitialize","rows","placeholderText","showTimeSelect","timeCaption","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","activityImageStyle","activityImageTextStyle","bottom","left","height","updating","setUpdating","attendance","toggleCancel","padding","zIndex","top","ribbon","ActivityDetailedInfo","verticalAlign","length","relaxed","divided","Extra","TestErrors","baseUrl","widths","primary","NotFound","Inline","message","details","Modal","onClose","isCurrentUser","editProfileMode","setEditProfileMode","Tab","Pane","itemsPerRow","panes","menuItem","menu","FileWidgetDropZone","setFiles","dzStyles","borderRadius","onDrop","useCallback","acceptedFiles","previewUrl","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","PhotoUploadWidget","files","cropper","revokeObjectURL","columns","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","uploadingPhoto","setUploadingPhoto","val","handleSetMainPhoto","handleDeletePhoto","ProfileActivities","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","LoginForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.0f37317d.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 5) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { PaginatedResult } from '../models/pagination';\r\nimport { FollowPredicate, Photo, Profile, ProfileActivity, ProfileActivityPredicate, ProfileFormValues } from '../models/profile';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from '../stores/store';\r\nimport { handleError } from './errorHandler';\r\n\r\nconst sleep = (delay: number) => new Promise<void>((resolve) => setTimeout(() => resolve(), delay))\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(async r => {\r\n  if (process.env.NODE_ENV === 'development') await sleep(500);\r\n\r\n  const pagination = r.headers['pagination'];\r\n  if (pagination) {\r\n    r.data = new PaginatedResult(r.data, JSON.parse(pagination));\r\n    // return r as AxiosResponse<PaginatedResult<>>\r\n  }\r\n\r\n  return r;\r\n}, (error: AxiosError) => {\r\n  handleError(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T> (url: string, config?: AxiosRequestConfig) => axios.get<T>(url, config).then(responseBody),\r\n  put: <T> (url: string, body: any) => axios.put<T>(url, body).then(responseBody),\r\n  post: <T> (url: string, body: any) => axios.post<T>(url, body).then(responseBody),\r\n  delete: <T> (url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) => requests.get<PaginatedResult<Activity[]>>('/activities', {params}),\r\n  detail: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (acitivity: ActivityFormValues) => requests.post<void>('/activities', acitivity),\r\n  update: (acitivity: ActivityFormValues) => requests.put<void>(`/activities/${acitivity.id}`, acitivity),\r\n  delete: (id: string) => requests.delete<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Accounts = {\r\n  current: () => requests.get<User>('/account'),\r\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n  fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  update: (profile: ProfileFormValues) => requests.put('/profiles', profile),\r\n  uploadPhoto: (file: Blob) => {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return axios.post<Photo>('photos', formData, {\r\n      headers: { 'Content-type': 'multipart/form-data' }\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.put(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\r\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n  getFollowings: (username: string, predicate: FollowPredicate) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  getActivities: (username: string, predicate: ProfileActivityPredicate) => requests.get<ProfileActivity[]>(`/profiles/${username}/activities?filter=${predicate}`)\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Accounts,\r\n  Profiles\r\n};\r\n\r\nexport default agent;\r\n","import { AxiosError } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { store } from '../stores/store';\r\n\r\nexport function handleError(error: AxiosError) {\r\n  const {data, status, config} = error.response!;\r\n  switch(status) {\r\n    case 400:\r\n      if (!data.errors) {\r\n        toast.error(data.title);\r\n      }\r\n      console.log(data)\r\n      if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n        history.push('/not-found');\r\n      }\r\n      if (data.errors) {\r\n        const modalStateErrors = [];\r\n        for (const key in data.errors) {\r\n          if (Object.prototype.hasOwnProperty.call(data.errors, key)) {\r\n            modalStateErrors.push(data.errors[key]);\r\n          }\r\n        }\r\n\r\n        throw modalStateErrors.flat();\r\n      } else {\r\n        toast.error(data);\r\n      }\r\n      break;\r\n    case 401:\r\n      toast.error('Unauthorized');\r\n      break;\r\n    case 404:\r\n      history.push('/not-found');\r\n      break;\r\n    case 500:\r\n      store.commonStore.setServerError(data);\r\n      history.push('/server-error');\r\n      break;\r\n  }\r\n}\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername?: string;\r\n  isCancelled?: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = '';\r\n  category: string = '';\r\n  description: string = '';\r\n  date: Date | null = null;\r\n  city: string = '';\r\n  venue: string = '';\r\n\r\n  constructor(activity?: Activity) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport class ProfileFormValues {\r\n  displayName: string;\r\n  bio?: string;\r\n\r\n  constructor(profile: Profile) {\r\n    this.displayName = profile.displayName;\r\n    this.bio = profile.bio ?? undefined;\r\n  }\r\n}\r\n\r\nexport interface ProfileActivity {\r\n  activityId: string;\r\n  title: string;\r\n  date: Date;\r\n  category: string;\r\n}\r\n\r\nexport type FollowPredicate = 'FOLLOWERS' | 'FOLLOWINGS';\r\nexport type ProfileActivityPredicate = 'FUTURE' | 'PAST' | 'HOST';\r\n","import { makeAutoObservable, reaction, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { format } from 'date-fns';\r\nimport { store } from './store';\r\nimport { Profile } from '../models/profile';\r\nimport { Pagination, PagingParams } from '../models/pagination';\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  loading = false;\r\n  loadingIinitial = true;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set('all', true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(() => this.predicate.keys(), () => {\r\n      this.pagingParams = new PagingParams();\r\n      this.activityRegistry.clear();\r\n      this.loadActivites();\r\n    });\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => this.pagingParams = pagingParams;\r\n\r\n  setPredicate = (predicate: string, value: boolean | string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== 'startDate') this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch(predicate) {\r\n      case 'all':\r\n      case 'isGoing':\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set(predicate, value);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete(predicate);\r\n        this.predicate.set('startDate', value);\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize', this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (value instanceof Date) {\r\n        params.append(key, value.toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort((a, b) => a.date.getTime() - b.date.getTime());\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(this.activitiesByDate.reduce((activities, activity) => {\r\n      const date = format(activity.date, 'dd MMM yyyy');\r\n      if (!activities[date]) {\r\n        activities[date] = [activity];\r\n      } else {\r\n        activities[date].push(activity);\r\n      }\r\n      return activities;\r\n    }, {} as { [key: string]: Activity[] }));\r\n  }\r\n\r\n  loadActivites = async () => {\r\n    this.setLoadingInitial(true);\r\n    try {\r\n      const activities = await agent.Activities.list(this.axiosParams);\r\n      activities.data.forEach(this.addToRegistry);\r\n      this.setPagination(activities.pagination);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    this.setLoadingInitial(false);\r\n  }\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity =  async (id: string) => {\r\n    const activity = this.activityRegistry.get(id)\r\n      ?? await this.getActivity(id);\r\n    this.selectActivity(activity);\r\n  }\r\n\r\n  private getActivity = async (id: string) => {\r\n    this.setLoading(true);\r\n    try {\r\n      const activity = await agent.Activities.detail(id);\r\n      this.addToRegistry(activity);\r\n      return this.activityRegistry.get(id);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  private addToRegistry = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees?.some(a => a.username === user.username);\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(a => a.username === activity.hostUsername);\r\n    }\r\n\r\n    this.activityRegistry.set(activity.id, { ...activity, date: new Date(activity.date) })\r\n  }\r\n  \r\n  setLoadingInitial = (state: boolean) => this.loadingIinitial = state;\r\n  setLoading = (state: boolean) => this.loading = state;\r\n  selectActivity = (activity?: Activity) => this.selectedActivity = activity;\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    activity.id = uuid();\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user?.username!;\r\n      newActivity.attendees = [attendee];\r\n      this.addToRegistry(newActivity);\r\n      this.selectActivity(newActivity);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    return activity;\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          const updatedActivity = {...this.activityRegistry.get(activity.id), ...activity};\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectActivity(updatedActivity as Activity);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    return activity;\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.setLoading(true);\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => { \r\n        this.activityRegistry.delete(id);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    this.setLoading(false);\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    if (!this.selectedActivity || !user) return;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a => a.username !== user.username);\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          this.selectedActivity?.attendees?.push(new Profile(user));\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  }\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach(activity => {\r\n      activity.attendees.forEach(attendee => {\r\n        if (attendee.username === username) {\r\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    })\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { FollowPredicate, Photo, Profile, ProfileActivity, ProfileActivityPredicate, ProfileFormValues } from '../models/profile';\r\nimport { store } from './store';\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  followings: Profile[] = [];\r\n  activities: ProfileActivity[] = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => this.profile = profile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: ProfileFormValues) => {\r\n    try {\r\n      await agent.Profiles.update(profile);\r\n      runInAction(() => {\r\n        this.profile = {...this.profile, ...profile} as Profile;\r\n        store.userStore.setDisplayname(profile.displayName);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile?.photos) {\r\n          this.profile.photos.forEach(p => p.isMain = p.id === photo.id);\r\n          this.profile.image = photo.url;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n          if (photo.isMain) {\r\n            store.userStore.setImage(undefined);\r\n            this.profile.image = undefined;\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n\r\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n        }\r\n\r\n        this.followings.forEach(following => {\r\n          if (following.username === username) {\r\n            following.following ? following.followersCount-- : following.followersCount++;\r\n            following.following = !following.following;\r\n          }\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: FollowPredicate) => {\r\n    try {\r\n      const followings = await agent.Profiles.getFollowings(this.profile!.username, predicate);\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  loadProfileActivities = async (predicate: ProfileActivityPredicate) => {\r\n    try {\r\n      const activities = await agent.Profiles.getActivities(this.profile!.username, predicate);\r\n      runInAction(() => this.activities = activities.map(activity => {\r\n        activity.date = new Date(activity.date);\r\n        return activity;\r\n      }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}","import { makeAutoObservable, runInAction } from 'mobx';\r\nimport { history } from '../..';\r\nimport agent from '../api/agent';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from './store';\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Accounts.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.setUser(user);\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    this.user = null;\r\n    history.push('/');\r\n  }\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Accounts.current();\r\n      this.setUser(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Accounts.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.setUser(user);\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setUser = (user: User) => this.user = user;\r\n  setDisplayname = (name: string) => this.user ? this.user.displayName = name : null;\r\n\r\n  setImage = (imageUrl?: string) => {\r\n    if (this.user) {\r\n      this.user.image = imageUrl;\r\n    }\r\n  }\r\n\r\n  setFbAccessToken = async () => {\r\n    window.FB.getLoginStatus(response => {\r\n      if (response.status === 'connected') {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Accounts.fbLogin(accessToken).then(user => {\r\n        runInAction(() => {\r\n          store.commonStore.setToken(user.token);\r\n          this.setUser(user);\r\n        })\r\n        history.push('/activities');\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => runInAction(() => this.fbLoading = false));\r\n    };\r\n\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(response => {\r\n        if (response.status === 'connected') {\r\n          apiLogin(response.authResponse.accessToken);\r\n        }\r\n      }, { scope: 'public_profile,email' });\r\n    }\r\n  };\r\n}","import { useContext } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem('jwt');\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      token => {\r\n        if (token) {\r\n          window.localStorage.setItem('jwt', token);\r\n        } else {\r\n          window.localStorage.removeItem('jwt');\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => this.appLoaded = true;\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null\r\n  }\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  }\r\n}\r\n","import { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport { makeAutoObservable, runInAction } from 'mobx';\r\nimport { ChatComment } from '../models/comment';\r\nimport { store } from './store';\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection.start().catch(console.log);\r\n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n        runInAction(() => this.comments = comments.map(comment => {\r\n          comment.createdAt = new Date(comment.createdAt + 'Z');\r\n          return comment;\r\n        }));\r\n      });\r\n\r\n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n        runInAction(() => this.comments.unshift({...comment, createdAt: new Date(comment.createdAt)}));\r\n      })\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection?.stop().catch(console.log);\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  }\r\n\r\n  addComment = async (body: string) => {\r\n    const activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke('SendComment', { body, activityId });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Icon, Menu, Image, Dropdown } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar() {\r\n  const {userStore: {user, logout}} = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <Icon name=\"react\" />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button as={NavLink} to=\"/createActivity\" positive content=\"Create activity\" />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image src={user?.image || '/assets/user-avatar.png'} avatar spaced=\"right\" />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text=\"My profile\" icon=\"user\" />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {activityStore: {predicate, setPredicate}} = useStore();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Menu vertical size=\"large\" style={{width: '100%', marginTop: 26 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n\r\n        <Menu.Item content=\"All activities\" active={predicate.has('all')} onClick={() => setPredicate('all', true)} />\r\n        <Menu.Item content=\"I'm going\" active={predicate.has('isGoing')} onClick={() => setPredicate('isGoing', true)} />\r\n        <Menu.Item content=\"I'm hosting\" active={predicate.has('isHost')} onClick={() => setPredicate('isHost', true)} />\r\n      </Menu>\r\n\r\n      <Header />\r\n      <Calendar onChange={(date) => setPredicate('startDate', date as Date)} value={predicate.get('startDate') ?? new Date()} />\r\n    </Fragment>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { SyntheticEvent, useState } from 'react';\r\nimport { Reveal, Button } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({profile}: Props) {\r\n  const {profileStore, userStore} = useStore();\r\n  const {updateFollowing} = profileStore;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    updateFollowing(username, !profile.following)\r\n      .finally(() => setLoading(false));\r\n  }\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{width: '100%'}}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following' : 'Not following'} />\r\n      </Reveal.Content>\r\n\r\n      <Reveal.Content hidden style={{width: '100%'}}>\r\n        <Button fluid basic color={profile.following ? 'red' : 'green'} content={profile.following ? 'Unfollow' : 'Follow'}\r\n                loading={loading} onClick={(e) => handleFollow(e, profile.username)} />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({profile}: Props) {\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || '/assets/user-avatar.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description style={{textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}>{profile.bio}</Card.Description>\r\n      </Card.Content>\r\n      \r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({attendees}: Props) {\r\n  const styles = {\r\n    borderColor: 'orange',\r\n    borderWidth: 2\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map(attendee => (\r\n        <Popup hoverable key={attendee.username} trigger={\r\n          <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n            <Image size=\"mini\" circular src={attendee.image || '/assets/user-avatar.png'}\r\n                    bordered style={attendee.following ? styles : null} />\r\n          </List.Item>\r\n        }>\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n};\r\n\r\nexport default function ActivityListItem({activity}: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled &&  (\r\n          <Label attached=\"top\" color=\"red\" content=\"Cancelled\" style={{textAlign: 'center'}} />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image size=\"tiny\" circular src={activity.host?.image || '/assets/user-avatar.png'} />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>{activity.title}</Item.Header>\r\n              <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`} >{activity.host?.username}</Link></Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\" content=\"You are hosting this activity\" />\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\" content=\"You are going to this activity\" />\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n\r\n      <Segment>\r\n        <span><Icon name=\"clock\" /> {format(activity.date, 'd MMM yyyy h:mm aa')}</span>\r\n        <span style={{marginLeft: 16}}><Icon name=\"marker\" /> {activity.venue}</span>\r\n      </Segment>\r\n\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees || []} />\r\n      </Segment>\r\n\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button as={Link} to={`/activities/${activity.id}`} color=\"teal\" floated=\"right\" content=\"View\" />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const {activityStore} = useStore();\r\n  const {groupedActivities} = activityStore;\r\n\r\n  return (\r\n    <Fragment>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color='teal'>\r\n            {group}\r\n          </Header>\r\n\r\n          {activities.map(activity => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n});\r\n","import { Fragment } from \"react\";\r\nimport { Button, Placeholder, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{marginTop: 25}}>\r\n        <Segment.Group>\r\n          <Segment style={{minHeight: 110}}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n\r\n          <Segment secondary style={{minHeight: 70}} />\r\n\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport { PagingParams } from '../../../app/models/pagination';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const {activityStore: {loadActivites, loadingIinitial, setPagingParams, pagination}} = useStore();\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams((pagination?.currentPage ?? 0) + 1));\r\n    loadActivites().finally(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadActivites();\r\n  }, [loadActivites]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {loadingIinitial && !loadingNext ? (\r\n          <Fragment>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </Fragment>\r\n        ) : (\r\n          <InfiniteScroll pageStart={0} loadMore={handleGetNext} initialLoad={false}\r\n                hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}>\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from 'formik';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport AppTextInput from '../../app/common/form/AppTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n  const {userStore} = useStore();\r\n\r\n  return (\r\n    <Formik initialValues={{ email: '', password: '', error: null }}\r\n          onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => setErrors({error: 'Invalid email or password'}))}>\r\n      {({handleSubmit, isSubmitting, errors}) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as=\"h2\" content=\"Login to reactivities\" color=\"teal\" textAlign=\"center\" />\r\n\r\n          <AppTextInput name=\"email\" placeholder=\"Email\" />\r\n          <AppTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n\r\n          <ErrorMessage name=\"error\" render={() => <Label style={{marginBottom: 10}} basic color=\"red\" content={errors.error} /> } />\r\n          <Button content=\"Login\" positive type=\"submit\" fluid loading={isSubmitting} />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: string[];\r\n}\r\n\r\nexport default function ValidationErrors({errors}: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((error, i) => (\r\n            <Message.Item key={i}>{error}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport AppTextInput from '../../app/common/form/AppTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup'\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n  const {userStore} = useStore();\r\n\r\n  return (\r\n    <Formik initialValues={{ displayName: '', username: '', email: '', password: '', error: null }}\r\n          onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => setErrors({error}))}\r\n          validationSchema={Yup.object({\r\n              displayName: Yup.string().required(),\r\n              username: Yup.string().required(),\r\n              email: Yup.string().required().email(),\r\n              password: Yup.string().required()\r\n          })}>\r\n      {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as=\"h2\" content=\"Sign up to reactivities\" color=\"teal\" textAlign=\"center\" />\r\n\r\n          <AppTextInput name=\"displayName\" placeholder=\"Display name\" />\r\n          <AppTextInput name=\"username\" placeholder=\"Username\" />\r\n          <AppTextInput name=\"email\" placeholder=\"Email\" />\r\n          <AppTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n\r\n          <ErrorMessage name=\"error\" render={() => errors.error && <ValidationErrors errors={[errors.error]} /> } />\r\n          <Button content=\"Register\" positive type=\"submit\" fluid loading={isSubmitting} disabled={!isValid || !dirty || isSubmitting} />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Divider, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const {userStore, modalStore} = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Icon name=\"react\" size=\"massive\" style={{marginBottom: 12}} />\r\n          Reactivities\r\n        </Header>\r\n\r\n        {userStore.isLoggedIn ? (\r\n          <Fragment>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted>\r\n              Login\r\n            </Button>\r\n\r\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted>\r\n              Register\r\n            </Button>\r\n\r\n            <Divider horizontal inverted>Or</Divider>\r\n\r\n            <Button onClick={() => userStore.facebookLogin()} size=\"huge\" inverted color=\"facebook\"\r\n                loading={userStore.fbLoading}>\r\n              Login with facebook\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function Loading({inverted = true, content = 'Loading...'}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from 'formik';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  rows: number;\r\n}\r\n\r\nexport default function AppTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}","import { useField } from 'formik';\r\nimport { DropdownItemProps, Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  options: DropdownItemProps[];\r\n}\r\n\r\nexport default function AppSelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select clearable options={props.options} value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}","export const categoryOptions = [\r\n  { text: 'Drinks', value: 'drinks' },\r\n  { text: 'Culture', value: 'culture' },\r\n  { text: 'Film', value: 'film' },\r\n  { text: 'Food', value: 'food' },\r\n  { text: 'Music', value: 'music' },\r\n  { text: 'Travel', value: 'travel' },\r\n];\r\n","import { useField } from 'formik';\r\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\nexport default function AppDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name ?? '');\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <ReactDatePicker {...field} {...props} dateFormat={props.dateFormat ?? 'MMMM d, yyyy h:mm aa'} \r\n        selected={(field.value ? new Date(field.value) : null)}\r\n        onChange={value => helpers.setValue(value)} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}","import { Formik, Form } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport Loading from '../../../app/layout/Loading';\r\nimport { Activity, ActivityFormValues } from '../../../app/models/activity';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport AppTextInput from '../../../app/common/form/AppTextInput';\r\nimport AppTextArea from '../../../app/common/form/AppTextArea';\r\nimport AppSelectInput from '../../../app/common/form/AppSelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport AppDateInput from '../../../app/common/form/AppDateInput';\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const {activityStore} = useStore();\r\n  const {createActivity, updateActivity, loading, loadActivity, selectedActivity} = activityStore;\r\n  const {id} = useParams<{id: string}>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required('The title is required'),\r\n    description: Yup.string().required('The description is required'),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required().nullable(),\r\n    city: Yup.string().required(),\r\n    venue: Yup.string().required()\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id).then(() => {\r\n      if (selectedActivity) setActivity(new ActivityFormValues(selectedActivity));\r\n    });\r\n  }, [id, loadActivity, selectedActivity]);\r\n\r\n  async function handleFormSubmit(activity: ActivityFormValues) {\r\n    const saved = activity.id ? await updateActivity(activity) : await createActivity(activity);\r\n    history.push(`/activities/${saved.id}`);\r\n  }\r\n  \r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity details\" sub color=\"teal\" />\r\n      <Formik enableReinitialize validationSchema={validationSchema} initialValues={activity as Activity} onSubmit={handleFormSubmit}>\r\n        {({handleSubmit, isValid, isSubmitting, dirty}) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <AppTextInput placeholder=\"Title\" name=\"title\" />\r\n            <AppTextArea placeholder=\"Description\" name=\"description\" rows={3} />\r\n            <AppSelectInput placeholder=\"Category\" name=\"category\" options={categoryOptions} />\r\n            <AppDateInput placeholderText=\"Date\" name=\"date\" showTimeSelect timeCaption=\"Time\" />\r\n\r\n            <Header content=\"Location details\" sub color=\"teal\" />\r\n            <AppTextInput placeholder=\"City\" name=\"city\" />\r\n            <AppTextInput placeholder=\"Venue\" name=\"venue\" />\r\n\r\n            <Button floated=\"right\" positive type=\"submit\" content=\"Submit\" \r\n                    loading={isSubmitting} disabled={isSubmitting || !dirty || !isValid}/>\r\n            <Button floated=\"right\" content=\"Cancel\" as={Link} to='/activities' />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { Comment, Header, Loader, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\r\n  const {commentStore} = useStore();\r\n\r\n  const validationSchema = Yup.object({\r\n    body: Yup.string().required()\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment textAlign=\"center\" attached=\"top\" inverted color=\"teal\" style={{border: 'none'}}>\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n\r\n      <Segment attached>\r\n        <Formik onSubmit={(values, {resetForm}) => commentStore.addComment(values.body).then(() => resetForm())}\r\n                initialValues={{body: ''}} validationSchema={validationSchema}>\r\n          {({isSubmitting, isValid, handleSubmit}) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{position: 'relative'}}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea placeholder=\"Enter your comments\" rows={2} {...props.field}\r\n                              onKeyPress={e => {\r\n                                if (e.key === 'Enter' && e.shiftKey) return;\r\n                                if (e.key === 'Enter' && !e.shiftKey) {\r\n                                  e.preventDefault();\r\n                                  isValid && handleSubmit();\r\n                                }\r\n                              }} />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n        <Comment.Group>\r\n          {commentStore.comments.map(comment => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || '/assets/user-avatar.png'} />\r\n\r\n              <Comment.Content>\r\n                <Comment.Author as=\"a\" to={`/prifiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                <Comment.Metadata>{formatDistanceToNow(comment.createdAt)} ago</Comment.Metadata>\r\n                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Image, Item, Header, Button, Label } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n  filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '90%',\r\n  height: 'auto',\r\n  color: 'white'\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity\r\n};\r\n\r\nexport default observer(function ActivityDetailedHader({activity}: Props) {\r\n  const {activityStore: {updateAttendance, cancelActivityToggle}} = useStore();\r\n  const [updating, setUpdating] = useState(false);\r\n\r\n  const attendance = async () => {\r\n    setUpdating(true);\r\n    updateAttendance().finally(() => setUpdating(false));\r\n  };\r\n\r\n  const toggleCancel = async () => {\r\n    setUpdating(true);\r\n    cancelActivityToggle().finally(() => setUpdating(false));\r\n  };\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{padding: 0}}>\r\n        {activity.isCancelled && (\r\n          <Label style={{position: 'absolute', zIndex: 1, left: -14, top: 20}} ribbon color=\"red\" content=\"Cancelled\" />\r\n        )}\r\n        <Image src=\"/assets/activities.png\" fluid style={activityImageStyle} />\r\n        \r\n        <Segment basic style={activityImageTextStyle}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header size=\"huge\" content={activity.title} style={{color: 'white'}} />\r\n                <p>{format(activity.date, 'dd MMM yyyy')}</p>\r\n                <p>Hosted by <strong><Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></strong></p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <Fragment>\r\n            <Button color={activity.isCancelled ? 'green' : 'red'} floated=\"left\" basic onClick={toggleCancel} loading={updating}\r\n                content={activity.isCancelled ? 'Re-activate activity' : 'Cancel activity'} />\r\n            <Button color=\"orange\" floated=\"right\" as={Link} to={`/manage/${activity.id}`} disabled={activity.isCancelled}>Manage event</Button>\r\n          </Fragment>\r\n        ): activity.isGoing ? (\r\n          <Button loading={updating} onClick={attendance}>Cancel attendance</Button>\r\n        ) : ( \r\n          <Button loading={updating} color=\"teal\" onClick={attendance} disabled={activity.isCancelled}>Join activity</Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { Grid, Icon, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity\r\n}\r\n\r\nexport default function ActivityDetailedInfo({activity}: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"calendar\" />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date, 'dd MMM yyyy h:mm aa')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"marker\" />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={15}>\r\n            <span>{activity.venue}, {activity.city}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, Item, Label, List, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: {attendees, host} }: Props) {\r\n  if (!attendees) return null;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment textAlign=\"center\" style={{border: 'none'}} attached=\"top\" secondary inverted color=\"teal\">\r\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'}\r\n      </Segment>\r\n\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map(attendee => (\r\n            <Item style={{position: 'relative'}} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label style={{position: 'absolute'}} color=\"orange\" ribbon=\"right\" content=\"Host\" />\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || '/assets/user-avatar.png'} />\r\n\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                </Item.Header>\r\n\r\n                {attendee.following &&\r\n                <Item.Extra style={{color: 'orange'}}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport Loading from '../../../app/layout/Loading';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityDetailedChat from './ActivityDetailedChats';\r\nimport ActivityDetailedHader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const {activityStore} = useStore();\r\n  const {loadActivity, loading, selectedActivity: activity, clearSelectedActivity} = activityStore;\r\n  const {id} = useParams<{id: string}>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loading || !activity) return <Loading />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import axios from 'axios';\r\nimport { Fragment } from 'react';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  function handleNotFound() {\r\n    axios.get(`${baseUrl}/buggy/not-found`).catch(console.log);\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios.get(`${baseUrl}/buggy/bad-request`).catch(console.log);\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios.get(`${baseUrl}/buggy/server-error`).catch(console.log);\r\n  }\r\n\r\n  function handleUnauthorized() {\r\n    axios.get(`${baseUrl}/buggy/unauthorized`).catch(console.log);\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios.get(`${baseUrl}/activities/notaguit`).catch(console.log);\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(`${baseUrl}/activities`, {}).catch(console.log);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header as=\"h1\" content=\"Test error compontn\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"NotFound\" basic primary />\r\n          <Button onClick={handleBadRequest} content=\"BadRequest\" basic primary />\r\n          <Button onClick={handleServerError} content=\"ServerError\" basic primary />\r\n          <Button onClick={handleUnauthorized} content=\"Unauthorized\" basic primary />\r\n          <Button onClick={handleBadGuid} content=\"BadGuid\" basic primary />\r\n          <Button onClick={handleValidationError} content=\"ValidationError\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Ooops! - we've looked everywhere and couldn't find this.\r\n      </Header>\r\n\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const {commonStore} = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details &&\r\n      <Segment>\r\n        <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n        <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n      </Segment>}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const {modalStore} = useStore();\r\n\r\n  return (\r\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size=\"mini\">\r\n      <Modal.Content>\r\n        {modalStore.modal.body}\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useState } from 'react';\r\nimport { Grid, Header, Tab, Button, Container, Label } from 'semantic-ui-react';\r\nimport { Profile, ProfileFormValues } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport AppTextInput from '../../app/common/form/AppTextInput';\r\nimport AppTextArea from '../../app/common/form/AppTextArea';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileAbout({profile}: Props) {\r\n  const {profileStore: {isCurrentUser, updateProfile}} = useStore();\r\n  const [editProfileMode, setEditProfileMode] = useState(false);\r\n\r\n  const validationSchema = Yup.object({\r\n    displayName: Yup.string().required(),\r\n    bio: Yup.string()\r\n  });\r\n\r\n  async function handleFormSubmit(profile: ProfileFormValues) {\r\n    await updateProfile(profile);\r\n    setEditProfileMode(false);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"id card outline\" content={`About ${profile.displayName}`} />\r\n          {isCurrentUser && !editProfileMode && (\r\n              <Button floated=\"right\" basic content={editProfileMode ? 'Cancel' : 'Edit'}\r\n                  onClick={() => setEditProfileMode(!editProfileMode)} />\r\n          )}\r\n        </Grid.Column>\r\n\r\n        {!editProfileMode && (\r\n          <Grid.Column width={16}>\r\n            <Container content={profile.bio} style={{whiteSpace: 'pre-line'}} />\r\n          </Grid.Column>\r\n        )}\r\n\r\n        {editProfileMode && (\r\n          <Grid.Column width={16}>\r\n              <Formik enableReinitialize validationSchema={validationSchema} initialValues={new ProfileFormValues(profile)} onSubmit={handleFormSubmit}>\r\n                {({handleSubmit, isValid, isSubmitting, dirty, errors}) => (\r\n                  <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <AppTextInput placeholder=\"Your name\" name=\"displayName\" />\r\n                    <AppTextArea placeholder=\"About you\" name=\"bio\" rows={3} />\r\n\r\n                    <ErrorMessage name=\"error\" render={() => <Label style={{marginBottom: 10}} basic color=\"red\" content={errors} /> } />\r\n                    <Button floated=\"right\" positive type=\"submit\" content=\"Submit\"\r\n                        loading={isSubmitting}disabled={isSubmitting || !isValid || !dirty} />\r\n                    <Button floated=\"right\" content=\"Cancel\" onClick={() => setEditProfileMode(false)} />\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n          </Grid.Column>\r\n        )}\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Tab } from 'semantic-ui-react';\r\nimport { ProfileActivityPredicate } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  predicate: ProfileActivityPredicate\r\n}\r\n\r\nexport default observer(function ProfileActivitiesPane({predicate}: Props) {\r\n  const {profileStore: {loadProfileActivities, activities}} = useStore();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    loadProfileActivities(predicate)\r\n      .finally(() => setLoading(false));\r\n  }, [loadProfileActivities, predicate]);\r\n\r\n  return (\r\n    <Tab.Pane loading={loading}>\r\n      <Card.Group itemsPerRow={4}>\r\n        {activities.map(activity => (\r\n          <Card key={activity.activityId} as={Link} to={`/activities/${activity.activityId}`}\r\n            image=\"/assets/activities.png\" header={activity.title} description={format(activity.date, 'd MMM yyyy h:mm aa')} />\r\n        ))}\r\n      </Card.Group>\r\n    </Tab.Pane>\r\n  );\r\n});","import { observer } from 'mobx-react-lite';\r\nimport { Grid, Header, Tab } from 'semantic-ui-react';\r\nimport ProfileActivitiesPane from './ProfileActivitiesPane';\r\n\r\nexport default observer(function ProfielActivities() {\r\n  const panes = [\r\n    { menuItem: 'Future Events', render: () => <ProfileActivitiesPane predicate='FUTURE' /> },\r\n    { menuItem: 'Past Events', render: () => <ProfileActivitiesPane predicate='PAST' /> },\r\n    { menuItem: 'Hosting', render: () => <ProfileActivitiesPane predicate='HOST' /> }\r\n  ];\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar alternate outline\" content=\"Activities\" />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={16}>\r\n          <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { FollowPredicate } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\ninterface Props {\r\n  predicate: FollowPredicate;\r\n}\r\n\r\nexport default observer(function ProfileFollowings({predicate}: Props) {\r\n  const {profileStore: {profile, followings, loadFollowings}} = useStore();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    loadFollowings(predicate)\r\n      .finally(() => setLoading(false));\r\n  }, [loadFollowings, predicate]);\r\n\r\n  return (\r\n    <Tab.Pane loading={loading}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"user\"\r\n                  content={predicate === 'FOLLOWERS' ? `People following ${profile?.displayName}` : `People ${profile?.displayName} follows`} />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map(profile => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function FileWidgetDropZone({setFiles}: Props) {\r\n  const dzStyles = {\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    padding: '40px 0',\r\n    textAlign: 'center' as 'center',\r\n    height: 200\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: 'green'\r\n  };\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file: File) => Object.assign(file, { previewUrl: URL.createObjectURL(file) })));\r\n  }, [setFiles]);\r\n\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n  return (\r\n    <Cropper src={imagePreview} style={{height: 200, width: '100%'}} initialAspectRatio={1} aspectRatio={1}\r\n        preview=\".img-preview\" guides={false} viewMode={1} autoCropArea={1} background={false}\r\n        onInitialized={setCropper} />\r\n  );\r\n}","import { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\nimport FileWidgetDropZone from './FileWidgetDropzone';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob(blob => blob ? uploadPhoto(blob) : null);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach(file => URL.revokeObjectURL(file.previewUrl));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid columns={3}>\r\n      <Grid.Column>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Select photo\" />\r\n        <FileWidgetDropZone setFiles={setFiles} />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files.length > 0 && (\r\n          <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].previewUrl} />\r\n        )}\r\n      </Grid.Column>\r\n      \r\n      <Grid.Column>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & upload\" />\r\n\r\n        <div className=\"img-preview\" style={{minHeight: 200, overflow: 'hidden'}} />\r\n        {files.length > 0 && (\r\n          <Button.Group widths={2} style={{marginTop: 16}}>\r\n            <Button loading={loading} onClick={onCrop} positive icon=\"check\" />\r\n            <Button disabled={loading} onClick={() => setFiles([])} icon=\"close\" />\r\n          </Button.Group>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  ); \r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useState } from 'react';\r\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\r\nimport { Photo, Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({profile}: Props) {\r\n  const {profileStore: {isCurrentUser, uploadPhoto, setMainPhoto, deletePhoto}} = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [uploadingPhoto, setUploadingPhoto] = useState(false);\r\n  const [loading, setLoading] = useState<{id?: string, type?: 'main' | 'delete', val: boolean}>({val: false});\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    setUploadingPhoto(true);\r\n    uploadPhoto(file)\r\n      .then(() => setAddPhotoMode(false))\r\n      .finally(() => setUploadingPhoto(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo) {\r\n    setLoading({id: photo.id, type: 'main', val: true});\r\n    setMainPhoto(photo).finally(() => setLoading({val: false}));\r\n  }\r\n\r\n  function handleDeletePhoto(photo: Photo) {\r\n    setLoading({id: photo.id, type: 'delete', val: true});\r\n    deletePhoto(photo).finally(() => setLoading({val: false}));\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button floated=\"right\" basic content={addPhotoMode ? 'Cancel' : 'Add photo'}\r\n                onClick={() => setAddPhotoMode(!addPhotoMode)} />\r\n          )}\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploadingPhoto} />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map(photo => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2} style={{marginTop: 0}}>\r\n                      <Button basic color=\"green\" content=\"Main\" disabled={photo.isMain}\r\n                          loading={loading.val && loading.id === photo.id && loading.type === 'main'} onClick={() => handleSetMainPhoto(photo)} />\r\n\r\n                      <Button basic color=\"red\" icon=\"trash\"\r\n                          loading={loading.val && loading.id === photo.id && loading.type === 'delete'} onClick={() => handleDeletePhoto(photo)} />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({profile}: Props) {\r\n  const panes = [\r\n    {menuItem: 'About', render: () => <ProfileAbout profile={profile} />},\r\n    {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\r\n    {menuItem: 'Events', render: () => <ProfileActivities />},\r\n    {menuItem: 'Followers', render: () => <ProfileFollowings predicate='FOLLOWERS' />},\r\n    {menuItem: 'Following', render: () => <ProfileFollowings predicate='FOLLOWINGS' />},\r\n  ];\r\n\r\n  return (\r\n    <Tab menu={{fluid: true, vertical: true}} menuPosition=\"left\" panes={panes} />\r\n  )\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({profile}: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image avatar size=\"small\" src={profile.image || '/assets/user-avatar.png'} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n\r\n          <Divider />\r\n\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport Loading from '../../app/layout/Loading';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage() {\r\n  const {username} = useParams<{username: string}>();\r\n  const {profileStore: {loadProfile, profile}} = useStore();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    loadProfile(username).finally(() => setLoading(false));\r\n  }, [loadProfile, username]);\r\n\r\n  if (loading) return <Loading content=\"Loading profile...\" />\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile &&\r\n        <Fragment>\r\n          <ProfileHeader profile={profile} />\r\n          <ProfileContent profile={profile} />\r\n      </Fragment>}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router';\r\nimport { useStore } from '../stores/store';\r\n\r\ninterface Props extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n  const {userStore: {isLoggedIn}} = useStore();\r\n\r\n  return (\r\n    <Route {...rest} render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />} />\r\n  );\r\n}\r\n","import { Fragment, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport LoginForm from '../../features/users/LoginForm';\nimport { useStore } from '../stores/store';\nimport Loading from './Loading';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.setFbAccessToken().then(() => commonStore.setAppLoaded());\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <Loading content=\"Loading app...\" />\n\n  return (\n    <Fragment>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n\n      <Route exact path='/' component={HomePage} />\n\n      <Route \n        path={'/(.+)'}\n        render={() => (\n          <Fragment>\n            <NavBar />\n\n            <Container style={{marginTop: '7em'}}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute path={['/createActivity', '/manage/:id']} component={ActivityForm} key={location.key} />\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <Route path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route path='/login' component={LoginForm} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nexport default function ScrollToTop() {\r\n  const {pathname} = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  // <React.StrictMode>\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}