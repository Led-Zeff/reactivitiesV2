{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/api/errorHandler.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/AppTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/Loading.tsx","app/common/form/AppTextArea.tsx","app/common/form/AppSelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/AppDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChats.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivitiesPane.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/FileWidgetDropzone.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","r","JSON","parse","error","status","errors","toast","title","console","log","method","hasOwnProperty","history","push","modalStateErrors","key","Object","prototype","call","flat","setServerError","handleError","Promise","reject","responseBody","requests","url","get","then","body","put","post","delete","agent","Activities","list","params","detail","id","create","acitivity","update","attend","Accounts","current","login","user","register","Profiles","username","profile","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","getFollowings","predicate","getActivities","Activity","init","assign","ActivityFormValues","activity","undefined","category","description","date","city","venue","Profile","displayName","image","ProfileFormValues","bio","ActivityStore","activityRegistry","Map","selectedActivity","loading","loadingIinitial","pagingParams","set","setPagingParams","setPredicate","value","forEach","loadActivites","setLoadingInitial","axiosParams","activities","addToRegistry","setPagination","loadActivity","getActivity","selectActivity","setLoading","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","Date","state","createActivity","attendee","uuid","newActivity","updateActivity","runInAction","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","format","ProfileStore","followings","loadProfile","updateProfile","setDisplayname","photo","photos","isMain","setImage","p","activityStore","followingCount","loadFollowings","loadProfileActivities","map","UserStore","creds","setToken","setUser","modalStore","closeModal","logout","getUser","name","imageUrl","window","localStorage","getItem","appLoaded","setAppLoaded","setItem","removeItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","Icon","Button","positive","position","Image","src","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","style","width","marginTop","Header","attached","color","active","has","onChange","useState","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","finally","handleFollow","Card","Description","textOverflow","whiteSpace","overflow","extra","styles","borderColor","borderWidth","List","horizontal","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginLeft","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","initialLoad","hasMore","totalPages","Loader","AppTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","marginBottom","ValidationErrors","Message","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Loading","Dimmer","AppTextArea","AppSelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","AppDateInput","dateFormat","selected","useHistory","useParams","setActivity","nullable","saved","enableReinitialize","rows","placeholderText","showTimeSelect","timeCaption","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","activityImageStyle","activityImageTextStyle","bottom","left","height","updating","setUpdating","attendance","toggleCancel","padding","zIndex","top","ribbon","ActivityDetailedInfo","verticalAlign","length","relaxed","divided","Extra","TestErrors","baseUrl","widths","primary","NotFound","Inline","message","details","Modal","onClose","isCurrentUser","editProfileMode","setEditProfileMode","Tab","Pane","itemsPerRow","panes","menuItem","menu","FileWidgetDropZone","setFiles","dzStyles","borderRadius","onDrop","useCallback","acceptedFiles","previewUrl","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","PhotoUploadWidget","files","cropper","revokeObjectURL","columns","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","uploadingPhoto","setUploadingPhoto","val","handleSetMainPhoto","handleDeletePhoto","ProfileActivities","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","LoginForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.63d8e810.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 5) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { PaginatedResult } from '../models/pagination';\r\nimport { FollowPredicate, Photo, Profile, ProfileActivity, ProfileActivityPredicate, ProfileFormValues } from '../models/profile';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from '../stores/store';\r\nimport { handleError } from './errorHandler';\r\n\r\nconst sleep = (delay: number) => new Promise<void>((resolve) => setTimeout(() => resolve(), delay))\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(async r => {\r\n  if (process.env.NODE_ENV === 'development') await sleep(500);\r\n\r\n  const pagination = r.headers['pagination'];\r\n  if (pagination) {\r\n    r.data = new PaginatedResult(r.data, JSON.parse(pagination));\r\n    // return r as AxiosResponse<PaginatedResult<>>\r\n  }\r\n\r\n  return r;\r\n}, (error: AxiosError) => {\r\n  handleError(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T> (url: string, config?: AxiosRequestConfig) => axios.get<T>(url, config).then(responseBody),\r\n  put: <T> (url: string, body: any) => axios.put<T>(url, body).then(responseBody),\r\n  post: <T> (url: string, body: any) => axios.post<T>(url, body).then(responseBody),\r\n  delete: <T> (url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) => requests.get<PaginatedResult<Activity[]>>('/activities', {params}),\r\n  detail: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (acitivity: ActivityFormValues) => requests.post<void>('/activities', acitivity),\r\n  update: (acitivity: ActivityFormValues) => requests.put<void>(`/activities/${acitivity.id}`, acitivity),\r\n  delete: (id: string) => requests.delete<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Accounts = {\r\n  current: () => requests.get<User>('/account'),\r\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  update: (profile: ProfileFormValues) => requests.put('/profiles', profile),\r\n  uploadPhoto: (file: Blob) => {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return axios.post<Photo>('photos', formData, {\r\n      headers: { 'Content-type': 'multipart/form-data' }\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.put(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\r\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n  getFollowings: (username: string, predicate: FollowPredicate) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  getActivities: (username: string, predicate: ProfileActivityPredicate) => requests.get<ProfileActivity[]>(`/profiles/${username}/activities?filter=${predicate}`)\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Accounts,\r\n  Profiles\r\n};\r\n\r\nexport default agent;\r\n","import { AxiosError } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { store } from '../stores/store';\r\n\r\nexport function handleError(error: AxiosError) {\r\n  const {data, status, config} = error.response!;\r\n  switch(status) {\r\n    case 400:\r\n      if (!data.errors) {\r\n        toast.error(data.title);\r\n      }\r\n      console.log(data)\r\n      if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n        history.push('/not-found');\r\n      }\r\n      if (data.errors) {\r\n        const modalStateErrors = [];\r\n        for (const key in data.errors) {\r\n          if (Object.prototype.hasOwnProperty.call(data.errors, key)) {\r\n            modalStateErrors.push(data.errors[key]);\r\n          }\r\n        }\r\n\r\n        throw modalStateErrors.flat();\r\n      } else {\r\n        toast.error(data);\r\n      }\r\n      break;\r\n    case 401:\r\n      toast.error('Unauthorized');\r\n      break;\r\n    case 404:\r\n      history.push('/not-found');\r\n      break;\r\n    case 500:\r\n      store.commonStore.setServerError(data);\r\n      history.push('/server-error');\r\n      break;\r\n  }\r\n}\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername?: string;\r\n  isCancelled?: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = '';\r\n  category: string = '';\r\n  description: string = '';\r\n  date: Date | null = null;\r\n  city: string = '';\r\n  venue: string = '';\r\n\r\n  constructor(activity?: Activity) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport class ProfileFormValues {\r\n  displayName: string;\r\n  bio?: string;\r\n\r\n  constructor(profile: Profile) {\r\n    this.displayName = profile.displayName;\r\n    this.bio = profile.bio ?? undefined;\r\n  }\r\n}\r\n\r\nexport interface ProfileActivity {\r\n  activityId: string;\r\n  title: string;\r\n  date: Date;\r\n  category: string;\r\n}\r\n\r\nexport type FollowPredicate = 'FOLLOWERS' | 'FOLLOWINGS';\r\nexport type ProfileActivityPredicate = 'FUTURE' | 'PAST' | 'HOST';\r\n","import { makeAutoObservable, reaction, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { format } from 'date-fns';\r\nimport { store } from './store';\r\nimport { Profile } from '../models/profile';\r\nimport { Pagination, PagingParams } from '../models/pagination';\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  loading = false;\r\n  loadingIinitial = true;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set('all', true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(() => this.predicate.keys(), () => {\r\n      this.pagingParams = new PagingParams();\r\n      this.activityRegistry.clear();\r\n      this.loadActivites();\r\n    });\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => this.pagingParams = pagingParams;\r\n\r\n  setPredicate = (predicate: string, value: boolean | string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== 'startDate') this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch(predicate) {\r\n      case 'all':\r\n      case 'isGoing':\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set(predicate, value);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete(predicate);\r\n        this.predicate.set('startDate', value);\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize', this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (value instanceof Date) {\r\n        params.append(key, value.toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort((a, b) => a.date.getTime() - b.date.getTime());\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(this.activitiesByDate.reduce((activities, activity) => {\r\n      const date = format(activity.date, 'dd MMM yyyy');\r\n      if (!activities[date]) {\r\n        activities[date] = [activity];\r\n      } else {\r\n        activities[date].push(activity);\r\n      }\r\n      return activities;\r\n    }, {} as { [key: string]: Activity[] }));\r\n  }\r\n\r\n  loadActivites = async () => {\r\n    this.setLoadingInitial(true);\r\n    try {\r\n      const activities = await agent.Activities.list(this.axiosParams);\r\n      activities.data.forEach(this.addToRegistry);\r\n      this.setPagination(activities.pagination);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    this.setLoadingInitial(false);\r\n  }\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity =  async (id: string) => {\r\n    const activity = this.activityRegistry.get(id)\r\n      ?? await this.getActivity(id);\r\n    this.selectActivity(activity);\r\n  }\r\n\r\n  private getActivity = async (id: string) => {\r\n    this.setLoading(true);\r\n    try {\r\n      const activity = await agent.Activities.detail(id);\r\n      this.addToRegistry(activity);\r\n      return this.activityRegistry.get(id);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  private addToRegistry = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees?.some(a => a.username === user.username);\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(a => a.username === activity.hostUsername);\r\n    }\r\n\r\n    this.activityRegistry.set(activity.id, { ...activity, date: new Date(activity.date) })\r\n  }\r\n  \r\n  setLoadingInitial = (state: boolean) => this.loadingIinitial = state;\r\n  setLoading = (state: boolean) => this.loading = state;\r\n  selectActivity = (activity?: Activity) => this.selectedActivity = activity;\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    activity.id = uuid();\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user?.username!;\r\n      newActivity.attendees = [attendee];\r\n      this.addToRegistry(newActivity);\r\n      this.selectActivity(newActivity);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    return activity;\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          const updatedActivity = {...this.activityRegistry.get(activity.id), ...activity};\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectActivity(updatedActivity as Activity);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    return activity;\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.setLoading(true);\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => { \r\n        this.activityRegistry.delete(id);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    this.setLoading(false);\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    if (!this.selectedActivity || !user) return;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a => a.username !== user.username);\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          this.selectedActivity?.attendees?.push(new Profile(user));\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  }\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach(activity => {\r\n      activity.attendees.forEach(attendee => {\r\n        if (attendee.username === username) {\r\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    })\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { FollowPredicate, Photo, Profile, ProfileActivity, ProfileActivityPredicate, ProfileFormValues } from '../models/profile';\r\nimport { store } from './store';\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  followings: Profile[] = [];\r\n  activities: ProfileActivity[] = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => this.profile = profile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: ProfileFormValues) => {\r\n    try {\r\n      await agent.Profiles.update(profile);\r\n      runInAction(() => {\r\n        this.profile = {...this.profile, ...profile} as Profile;\r\n        store.userStore.setDisplayname(profile.displayName);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile?.photos) {\r\n          this.profile.photos.forEach(p => p.isMain = p.id === photo.id);\r\n          this.profile.image = photo.url;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n          if (photo.isMain) {\r\n            store.userStore.setImage(undefined);\r\n            this.profile.image = undefined;\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n\r\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n        }\r\n\r\n        this.followings.forEach(following => {\r\n          if (following.username === username) {\r\n            following.following ? following.followersCount-- : following.followersCount++;\r\n            following.following = !following.following;\r\n          }\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: FollowPredicate) => {\r\n    try {\r\n      const followings = await agent.Profiles.getFollowings(this.profile!.username, predicate);\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  loadProfileActivities = async (predicate: ProfileActivityPredicate) => {\r\n    try {\r\n      const activities = await agent.Profiles.getActivities(this.profile!.username, predicate);\r\n      runInAction(() => this.activities = activities.map(activity => {\r\n        activity.date = new Date(activity.date);\r\n        return activity;\r\n      }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}","import { makeAutoObservable } from 'mobx';\r\nimport { history } from '../..';\r\nimport agent from '../api/agent';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from './store';\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Accounts.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.setUser(user);\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    this.user = null;\r\n    history.push('/');\r\n  }\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Accounts.current();\r\n      this.setUser(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Accounts.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.setUser(user);\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setUser = (user: User) => this.user = user;\r\n  setDisplayname = (name: string) => this.user ? this.user.displayName = name : null;\r\n\r\n  setImage = (imageUrl?: string) => {\r\n    if (this.user) {\r\n      this.user.image = imageUrl;\r\n    }\r\n  }\r\n}","import { useContext } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem('jwt');\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      token => {\r\n        if (token) {\r\n          window.localStorage.setItem('jwt', token);\r\n        } else {\r\n          window.localStorage.removeItem('jwt');\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => this.appLoaded = true;\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null\r\n  }\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  }\r\n}\r\n","import { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport { makeAutoObservable, runInAction } from 'mobx';\r\nimport { ChatComment } from '../models/comment';\r\nimport { store } from './store';\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection.start().catch(console.log);\r\n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n        runInAction(() => this.comments = comments.map(comment => {\r\n          comment.createdAt = new Date(comment.createdAt + 'Z');\r\n          return comment;\r\n        }));\r\n      });\r\n\r\n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n        runInAction(() => this.comments.unshift({...comment, createdAt: new Date(comment.createdAt)}));\r\n      })\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection?.stop().catch(console.log);\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  }\r\n\r\n  addComment = async (body: string) => {\r\n    const activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke('SendComment', { body, activityId });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Icon, Menu, Image, Dropdown } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar() {\r\n  const {userStore: {user, logout}} = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <Icon name=\"react\" />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button as={NavLink} to=\"/createActivity\" positive content=\"Create activity\" />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image src={user?.image || '/assets/user-avatar.png'} avatar spaced=\"right\" />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text=\"My profile\" icon=\"user\" />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {activityStore: {predicate, setPredicate}} = useStore();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Menu vertical size=\"large\" style={{width: '100%', marginTop: 26 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n\r\n        <Menu.Item content=\"All activities\" active={predicate.has('all')} onClick={() => setPredicate('all', true)} />\r\n        <Menu.Item content=\"I'm going\" active={predicate.has('isGoing')} onClick={() => setPredicate('isGoing', true)} />\r\n        <Menu.Item content=\"I'm hosting\" active={predicate.has('isHost')} onClick={() => setPredicate('isHost', true)} />\r\n      </Menu>\r\n\r\n      <Header />\r\n      <Calendar onChange={(date) => setPredicate('startDate', date as Date)} value={predicate.get('startDate') ?? new Date()} />\r\n    </Fragment>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { SyntheticEvent, useState } from 'react';\r\nimport { Reveal, Button } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({profile}: Props) {\r\n  const {profileStore, userStore} = useStore();\r\n  const {updateFollowing} = profileStore;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    updateFollowing(username, !profile.following)\r\n      .finally(() => setLoading(false));\r\n  }\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{width: '100%'}}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following' : 'Not following'} />\r\n      </Reveal.Content>\r\n\r\n      <Reveal.Content hidden style={{width: '100%'}}>\r\n        <Button fluid basic color={profile.following ? 'red' : 'green'} content={profile.following ? 'Unfollow' : 'Follow'}\r\n                loading={loading} onClick={(e) => handleFollow(e, profile.username)} />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({profile}: Props) {\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || '/assets/user-avatar.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description style={{textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}>{profile.bio}</Card.Description>\r\n      </Card.Content>\r\n      \r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({attendees}: Props) {\r\n  const styles = {\r\n    borderColor: 'orange',\r\n    borderWidth: 2\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map(attendee => (\r\n        <Popup hoverable key={attendee.username} trigger={\r\n          <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n            <Image size=\"mini\" circular src={attendee.image || '/assets/user-avatar.png'}\r\n                    bordered style={attendee.following ? styles : null} />\r\n          </List.Item>\r\n        }>\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n};\r\n\r\nexport default function ActivityListItem({activity}: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled &&  (\r\n          <Label attached=\"top\" color=\"red\" content=\"Cancelled\" style={{textAlign: 'center'}} />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image size=\"tiny\" circular src={activity.host?.image || '/assets/user-avatar.png'} />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>{activity.title}</Item.Header>\r\n              <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`} >{activity.host?.username}</Link></Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\" content=\"You are hosting this activity\" />\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\" content=\"You are going to this activity\" />\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n\r\n      <Segment>\r\n        <span><Icon name=\"clock\" /> {format(activity.date, 'd MMM yyyy h:mm aa')}</span>\r\n        <span style={{marginLeft: 16}}><Icon name=\"marker\" /> {activity.venue}</span>\r\n      </Segment>\r\n\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees || []} />\r\n      </Segment>\r\n\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button as={Link} to={`/activities/${activity.id}`} color=\"teal\" floated=\"right\" content=\"View\" />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const {activityStore} = useStore();\r\n  const {groupedActivities} = activityStore;\r\n\r\n  return (\r\n    <Fragment>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color='teal'>\r\n            {group}\r\n          </Header>\r\n\r\n          {activities.map(activity => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n});\r\n","import { Fragment } from \"react\";\r\nimport { Button, Placeholder, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{marginTop: 25}}>\r\n        <Segment.Group>\r\n          <Segment style={{minHeight: 110}}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n\r\n          <Segment secondary style={{minHeight: 70}} />\r\n\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport { PagingParams } from '../../../app/models/pagination';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const {activityStore: {loadActivites, loadingIinitial, setPagingParams, pagination}} = useStore();\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams((pagination?.currentPage ?? 0) + 1));\r\n    loadActivites().finally(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadActivites();\r\n  }, [loadActivites]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {loadingIinitial && !loadingNext ? (\r\n          <Fragment>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </Fragment>\r\n        ) : (\r\n          <InfiniteScroll pageStart={0} loadMore={handleGetNext} initialLoad={false}\r\n                hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}>\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from 'formik';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport AppTextInput from '../../app/common/form/AppTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n  const {userStore} = useStore();\r\n\r\n  return (\r\n    <Formik initialValues={{ email: '', password: '', error: null }}\r\n          onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => setErrors({error: 'Invalid email or password'}))}>\r\n      {({handleSubmit, isSubmitting, errors}) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as=\"h2\" content=\"Login to reactivities\" color=\"teal\" textAlign=\"center\" />\r\n\r\n          <AppTextInput name=\"email\" placeholder=\"Email\" />\r\n          <AppTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n\r\n          <ErrorMessage name=\"error\" render={() => <Label style={{marginBottom: 10}} basic color=\"red\" content={errors.error} /> } />\r\n          <Button content=\"Login\" positive type=\"submit\" fluid loading={isSubmitting} />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: string[];\r\n}\r\n\r\nexport default function ValidationErrors({errors}: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((error, i) => (\r\n            <Message.Item key={i}>{error}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport AppTextInput from '../../app/common/form/AppTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup'\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n  const {userStore} = useStore();\r\n\r\n  return (\r\n    <Formik initialValues={{ displayName: '', username: '', email: '', password: '', error: null }}\r\n          onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => setErrors({error}))}\r\n          validationSchema={Yup.object({\r\n              displayName: Yup.string().required(),\r\n              username: Yup.string().required(),\r\n              email: Yup.string().required().email(),\r\n              password: Yup.string().required()\r\n          })}>\r\n      {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as=\"h2\" content=\"Sign up to reactivities\" color=\"teal\" textAlign=\"center\" />\r\n\r\n          <AppTextInput name=\"displayName\" placeholder=\"Display name\" />\r\n          <AppTextInput name=\"username\" placeholder=\"Username\" />\r\n          <AppTextInput name=\"email\" placeholder=\"Email\" />\r\n          <AppTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n\r\n          <ErrorMessage name=\"error\" render={() => errors.error && <ValidationErrors errors={[errors.error]} /> } />\r\n          <Button content=\"Register\" positive type=\"submit\" fluid loading={isSubmitting} disabled={!isValid || !dirty || isSubmitting} />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const {userStore, modalStore} = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Icon name=\"react\" size=\"massive\" style={{marginBottom: 12}} />\r\n          Reactivities\r\n        </Header>\r\n\r\n        {userStore.isLoggedIn ? (\r\n          <Fragment>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted>\r\n              Login\r\n            </Button>\r\n\r\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted>\r\n              Register\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function Loading({inverted = true, content = 'Loading...'}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from 'formik';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  rows: number;\r\n}\r\n\r\nexport default function AppTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}","import { useField } from 'formik';\r\nimport { DropdownItemProps, Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  options: DropdownItemProps[];\r\n}\r\n\r\nexport default function AppSelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select clearable options={props.options} value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}","export const categoryOptions = [\r\n  { text: 'Drinks', value: 'drinks' },\r\n  { text: 'Culture', value: 'culture' },\r\n  { text: 'Film', value: 'film' },\r\n  { text: 'Food', value: 'food' },\r\n  { text: 'Music', value: 'music' },\r\n  { text: 'Travel', value: 'travel' },\r\n];\r\n","import { useField } from 'formik';\r\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\nexport default function AppDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name ?? '');\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <ReactDatePicker {...field} {...props} dateFormat={props.dateFormat ?? 'MMMM d, yyyy h:mm aa'} \r\n        selected={(field.value ? new Date(field.value) : null)}\r\n        onChange={value => helpers.setValue(value)} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}","import { Formik, Form } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport Loading from '../../../app/layout/Loading';\r\nimport { Activity, ActivityFormValues } from '../../../app/models/activity';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport AppTextInput from '../../../app/common/form/AppTextInput';\r\nimport AppTextArea from '../../../app/common/form/AppTextArea';\r\nimport AppSelectInput from '../../../app/common/form/AppSelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport AppDateInput from '../../../app/common/form/AppDateInput';\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const {activityStore} = useStore();\r\n  const {createActivity, updateActivity, loading, loadActivity, selectedActivity} = activityStore;\r\n  const {id} = useParams<{id: string}>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required('The title is required'),\r\n    description: Yup.string().required('The description is required'),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required().nullable(),\r\n    city: Yup.string().required(),\r\n    venue: Yup.string().required()\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id).then(() => {\r\n      if (selectedActivity) setActivity(new ActivityFormValues(selectedActivity));\r\n    });\r\n  }, [id, loadActivity, selectedActivity]);\r\n\r\n  async function handleFormSubmit(activity: ActivityFormValues) {\r\n    const saved = activity.id ? await updateActivity(activity) : await createActivity(activity);\r\n    history.push(`/activities/${saved.id}`);\r\n  }\r\n  \r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity details\" sub color=\"teal\" />\r\n      <Formik enableReinitialize validationSchema={validationSchema} initialValues={activity as Activity} onSubmit={handleFormSubmit}>\r\n        {({handleSubmit, isValid, isSubmitting, dirty}) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <AppTextInput placeholder=\"Title\" name=\"title\" />\r\n            <AppTextArea placeholder=\"Description\" name=\"description\" rows={3} />\r\n            <AppSelectInput placeholder=\"Category\" name=\"category\" options={categoryOptions} />\r\n            <AppDateInput placeholderText=\"Date\" name=\"date\" showTimeSelect timeCaption=\"Time\" />\r\n\r\n            <Header content=\"Location details\" sub color=\"teal\" />\r\n            <AppTextInput placeholder=\"City\" name=\"city\" />\r\n            <AppTextInput placeholder=\"Venue\" name=\"venue\" />\r\n\r\n            <Button floated=\"right\" positive type=\"submit\" content=\"Submit\" \r\n                    loading={isSubmitting} disabled={isSubmitting || !dirty || !isValid}/>\r\n            <Button floated=\"right\" content=\"Cancel\" as={Link} to='/activities' />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { Comment, Header, Loader, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\r\n  const {commentStore} = useStore();\r\n\r\n  const validationSchema = Yup.object({\r\n    body: Yup.string().required()\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment textAlign=\"center\" attached=\"top\" inverted color=\"teal\" style={{border: 'none'}}>\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n\r\n      <Segment attached>\r\n        <Formik onSubmit={(values, {resetForm}) => commentStore.addComment(values.body).then(() => resetForm())}\r\n                initialValues={{body: ''}} validationSchema={validationSchema}>\r\n          {({isSubmitting, isValid, handleSubmit}) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{position: 'relative'}}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea placeholder=\"Enter your comments\" rows={2} {...props.field}\r\n                              onKeyPress={e => {\r\n                                if (e.key === 'Enter' && e.shiftKey) return;\r\n                                if (e.key === 'Enter' && !e.shiftKey) {\r\n                                  e.preventDefault();\r\n                                  isValid && handleSubmit();\r\n                                }\r\n                              }} />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n        <Comment.Group>\r\n          {commentStore.comments.map(comment => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || '/assets/user-avatar.png'} />\r\n\r\n              <Comment.Content>\r\n                <Comment.Author as=\"a\" to={`/prifiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                <Comment.Metadata>{formatDistanceToNow(comment.createdAt)} ago</Comment.Metadata>\r\n                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Image, Item, Header, Button, Label } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n  filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '90%',\r\n  height: 'auto',\r\n  color: 'white'\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity\r\n};\r\n\r\nexport default observer(function ActivityDetailedHader({activity}: Props) {\r\n  const {activityStore: {updateAttendance, cancelActivityToggle}} = useStore();\r\n  const [updating, setUpdating] = useState(false);\r\n\r\n  const attendance = async () => {\r\n    setUpdating(true);\r\n    updateAttendance().finally(() => setUpdating(false));\r\n  };\r\n\r\n  const toggleCancel = async () => {\r\n    setUpdating(true);\r\n    cancelActivityToggle().finally(() => setUpdating(false));\r\n  };\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{padding: 0}}>\r\n        {activity.isCancelled && (\r\n          <Label style={{position: 'absolute', zIndex: 1, left: -14, top: 20}} ribbon color=\"red\" content=\"Cancelled\" />\r\n        )}\r\n        <Image src=\"/assets/activities.png\" fluid style={activityImageStyle} />\r\n        \r\n        <Segment basic style={activityImageTextStyle}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header size=\"huge\" content={activity.title} style={{color: 'white'}} />\r\n                <p>{format(activity.date, 'dd MMM yyyy')}</p>\r\n                <p>Hosted by <strong><Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></strong></p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <Fragment>\r\n            <Button color={activity.isCancelled ? 'green' : 'red'} floated=\"left\" basic onClick={toggleCancel} loading={updating}\r\n                content={activity.isCancelled ? 'Re-activate activity' : 'Cancel activity'} />\r\n            <Button color=\"orange\" floated=\"right\" as={Link} to={`/manage/${activity.id}`} disabled={activity.isCancelled}>Manage event</Button>\r\n          </Fragment>\r\n        ): activity.isGoing ? (\r\n          <Button loading={updating} onClick={attendance}>Cancel attendance</Button>\r\n        ) : ( \r\n          <Button loading={updating} color=\"teal\" onClick={attendance} disabled={activity.isCancelled}>Join activity</Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { Grid, Icon, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity\r\n}\r\n\r\nexport default function ActivityDetailedInfo({activity}: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"calendar\" />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date, 'dd MMM yyyy h:mm aa')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"marker\" />\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={15}>\r\n            <span>{activity.venue}, {activity.city}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, Item, Label, List, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: {attendees, host} }: Props) {\r\n  if (!attendees) return null;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment textAlign=\"center\" style={{border: 'none'}} attached=\"top\" secondary inverted color=\"teal\">\r\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'}\r\n      </Segment>\r\n\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map(attendee => (\r\n            <Item style={{position: 'relative'}} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label style={{position: 'absolute'}} color=\"orange\" ribbon=\"right\" content=\"Host\" />\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || '/assets/user-avatar.png'} />\r\n\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                </Item.Header>\r\n\r\n                {attendee.following &&\r\n                <Item.Extra style={{color: 'orange'}}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport Loading from '../../../app/layout/Loading';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityDetailedChat from './ActivityDetailedChats';\r\nimport ActivityDetailedHader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const {activityStore} = useStore();\r\n  const {loadActivity, loading, selectedActivity: activity, clearSelectedActivity} = activityStore;\r\n  const {id} = useParams<{id: string}>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loading || !activity) return <Loading />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import axios from 'axios';\r\nimport { Fragment } from 'react';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  function handleNotFound() {\r\n    axios.get(`${baseUrl}/buggy/not-found`).catch(console.log);\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios.get(`${baseUrl}/buggy/bad-request`).catch(console.log);\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios.get(`${baseUrl}/buggy/server-error`).catch(console.log);\r\n  }\r\n\r\n  function handleUnauthorized() {\r\n    axios.get(`${baseUrl}/buggy/unauthorized`).catch(console.log);\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios.get(`${baseUrl}/activities/notaguit`).catch(console.log);\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(`${baseUrl}/activities`, {}).catch(console.log);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header as=\"h1\" content=\"Test error compontn\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"NotFound\" basic primary />\r\n          <Button onClick={handleBadRequest} content=\"BadRequest\" basic primary />\r\n          <Button onClick={handleServerError} content=\"ServerError\" basic primary />\r\n          <Button onClick={handleUnauthorized} content=\"Unauthorized\" basic primary />\r\n          <Button onClick={handleBadGuid} content=\"BadGuid\" basic primary />\r\n          <Button onClick={handleValidationError} content=\"ValidationError\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Ooops! - we've looked everywhere and couldn't find this.\r\n      </Header>\r\n\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const {commonStore} = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details &&\r\n      <Segment>\r\n        <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n        <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n      </Segment>}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const {modalStore} = useStore();\r\n\r\n  return (\r\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size=\"mini\">\r\n      <Modal.Content>\r\n        {modalStore.modal.body}\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useState } from 'react';\r\nimport { Grid, Header, Tab, Button, Container, Label } from 'semantic-ui-react';\r\nimport { Profile, ProfileFormValues } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport AppTextInput from '../../app/common/form/AppTextInput';\r\nimport AppTextArea from '../../app/common/form/AppTextArea';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileAbout({profile}: Props) {\r\n  const {profileStore: {isCurrentUser, updateProfile}} = useStore();\r\n  const [editProfileMode, setEditProfileMode] = useState(false);\r\n\r\n  const validationSchema = Yup.object({\r\n    displayName: Yup.string().required(),\r\n    bio: Yup.string()\r\n  });\r\n\r\n  async function handleFormSubmit(profile: ProfileFormValues) {\r\n    await updateProfile(profile);\r\n    setEditProfileMode(false);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"id card outline\" content={`About ${profile.displayName}`} />\r\n          {isCurrentUser && !editProfileMode && (\r\n              <Button floated=\"right\" basic content={editProfileMode ? 'Cancel' : 'Edit'}\r\n                  onClick={() => setEditProfileMode(!editProfileMode)} />\r\n          )}\r\n        </Grid.Column>\r\n\r\n        {!editProfileMode && (\r\n          <Grid.Column width={16}>\r\n            <Container content={profile.bio} style={{whiteSpace: 'pre-line'}} />\r\n          </Grid.Column>\r\n        )}\r\n\r\n        {editProfileMode && (\r\n          <Grid.Column width={16}>\r\n              <Formik enableReinitialize validationSchema={validationSchema} initialValues={new ProfileFormValues(profile)} onSubmit={handleFormSubmit}>\r\n                {({handleSubmit, isValid, isSubmitting, dirty, errors}) => (\r\n                  <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <AppTextInput placeholder=\"Your name\" name=\"displayName\" />\r\n                    <AppTextArea placeholder=\"About you\" name=\"bio\" rows={3} />\r\n\r\n                    <ErrorMessage name=\"error\" render={() => <Label style={{marginBottom: 10}} basic color=\"red\" content={errors} /> } />\r\n                    <Button floated=\"right\" positive type=\"submit\" content=\"Submit\"\r\n                        loading={isSubmitting}disabled={isSubmitting || !isValid || !dirty} />\r\n                    <Button floated=\"right\" content=\"Cancel\" onClick={() => setEditProfileMode(false)} />\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n          </Grid.Column>\r\n        )}\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Tab } from 'semantic-ui-react';\r\nimport { ProfileActivityPredicate } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  predicate: ProfileActivityPredicate\r\n}\r\n\r\nexport default observer(function ProfileActivitiesPane({predicate}: Props) {\r\n  const {profileStore: {loadProfileActivities, activities}} = useStore();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    loadProfileActivities(predicate)\r\n      .finally(() => setLoading(false));\r\n  }, [loadProfileActivities, predicate]);\r\n\r\n  return (\r\n    <Tab.Pane loading={loading}>\r\n      <Card.Group itemsPerRow={4}>\r\n        {activities.map(activity => (\r\n          <Card key={activity.activityId} as={Link} to={`/activities/${activity.activityId}`}\r\n            image=\"/assets/activities.png\" header={activity.title} description={format(activity.date, 'd MMM yyyy h:mm aa')} />\r\n        ))}\r\n      </Card.Group>\r\n    </Tab.Pane>\r\n  );\r\n});","import { observer } from 'mobx-react-lite';\r\nimport { Grid, Header, Tab } from 'semantic-ui-react';\r\nimport ProfileActivitiesPane from './ProfileActivitiesPane';\r\n\r\nexport default observer(function ProfielActivities() {\r\n  const panes = [\r\n    { menuItem: 'Future Events', render: () => <ProfileActivitiesPane predicate='FUTURE' /> },\r\n    { menuItem: 'Past Events', render: () => <ProfileActivitiesPane predicate='PAST' /> },\r\n    { menuItem: 'Hosting', render: () => <ProfileActivitiesPane predicate='HOST' /> }\r\n  ];\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar alternate outline\" content=\"Activities\" />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={16}>\r\n          <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { FollowPredicate } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\ninterface Props {\r\n  predicate: FollowPredicate;\r\n}\r\n\r\nexport default observer(function ProfileFollowings({predicate}: Props) {\r\n  const {profileStore: {profile, followings, loadFollowings}} = useStore();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    loadFollowings(predicate)\r\n      .finally(() => setLoading(false));\r\n  }, [loadFollowings, predicate]);\r\n\r\n  return (\r\n    <Tab.Pane loading={loading}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"user\"\r\n                  content={predicate === 'FOLLOWERS' ? `People following ${profile?.displayName}` : `People ${profile?.displayName} follows`} />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map(profile => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function FileWidgetDropZone({setFiles}: Props) {\r\n  const dzStyles = {\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    padding: '40px 0',\r\n    textAlign: 'center' as 'center',\r\n    height: 200\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: 'green'\r\n  };\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file: File) => Object.assign(file, { previewUrl: URL.createObjectURL(file) })));\r\n  }, [setFiles]);\r\n\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n  return (\r\n    <Cropper src={imagePreview} style={{height: 200, width: '100%'}} initialAspectRatio={1} aspectRatio={1}\r\n        preview=\".img-preview\" guides={false} viewMode={1} autoCropArea={1} background={false}\r\n        onInitialized={setCropper} />\r\n  );\r\n}","import { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\nimport FileWidgetDropZone from './FileWidgetDropzone';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob(blob => blob ? uploadPhoto(blob) : null);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach(file => URL.revokeObjectURL(file.previewUrl));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid columns={3}>\r\n      <Grid.Column>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Select photo\" />\r\n        <FileWidgetDropZone setFiles={setFiles} />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files.length > 0 && (\r\n          <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].previewUrl} />\r\n        )}\r\n      </Grid.Column>\r\n      \r\n      <Grid.Column>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & upload\" />\r\n\r\n        <div className=\"img-preview\" style={{minHeight: 200, overflow: 'hidden'}} />\r\n        {files.length > 0 && (\r\n          <Button.Group widths={2} style={{marginTop: 16}}>\r\n            <Button loading={loading} onClick={onCrop} positive icon=\"check\" />\r\n            <Button disabled={loading} onClick={() => setFiles([])} icon=\"close\" />\r\n          </Button.Group>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  ); \r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useState } from 'react';\r\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\r\nimport { Photo, Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({profile}: Props) {\r\n  const {profileStore: {isCurrentUser, uploadPhoto, setMainPhoto, deletePhoto}} = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [uploadingPhoto, setUploadingPhoto] = useState(false);\r\n  const [loading, setLoading] = useState<{id?: string, type?: 'main' | 'delete', val: boolean}>({val: false});\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    setUploadingPhoto(true);\r\n    uploadPhoto(file)\r\n      .then(() => setAddPhotoMode(false))\r\n      .finally(() => setUploadingPhoto(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo) {\r\n    setLoading({id: photo.id, type: 'main', val: true});\r\n    setMainPhoto(photo).finally(() => setLoading({val: false}));\r\n  }\r\n\r\n  function handleDeletePhoto(photo: Photo) {\r\n    setLoading({id: photo.id, type: 'delete', val: true});\r\n    deletePhoto(photo).finally(() => setLoading({val: false}));\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button floated=\"right\" basic content={addPhotoMode ? 'Cancel' : 'Add photo'}\r\n                onClick={() => setAddPhotoMode(!addPhotoMode)} />\r\n          )}\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploadingPhoto} />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map(photo => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2} style={{marginTop: 0}}>\r\n                      <Button basic color=\"green\" content=\"Main\" disabled={photo.isMain}\r\n                          loading={loading.val && loading.id === photo.id && loading.type === 'main'} onClick={() => handleSetMainPhoto(photo)} />\r\n\r\n                      <Button basic color=\"red\" icon=\"trash\"\r\n                          loading={loading.val && loading.id === photo.id && loading.type === 'delete'} onClick={() => handleDeletePhoto(photo)} />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({profile}: Props) {\r\n  const panes = [\r\n    {menuItem: 'About', render: () => <ProfileAbout profile={profile} />},\r\n    {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\r\n    {menuItem: 'Events', render: () => <ProfileActivities />},\r\n    {menuItem: 'Followers', render: () => <ProfileFollowings predicate='FOLLOWERS' />},\r\n    {menuItem: 'Following', render: () => <ProfileFollowings predicate='FOLLOWINGS' />},\r\n  ];\r\n\r\n  return (\r\n    <Tab menu={{fluid: true, vertical: true}} menuPosition=\"left\" panes={panes} />\r\n  )\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({profile}: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image avatar size=\"small\" src={profile.image || '/assets/user-avatar.png'} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n\r\n          <Divider />\r\n\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport Loading from '../../app/layout/Loading';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage() {\r\n  const {username} = useParams<{username: string}>();\r\n  const {profileStore: {loadProfile, profile}} = useStore();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    loadProfile(username).finally(() => setLoading(false));\r\n  }, [loadProfile, username]);\r\n\r\n  if (loading) return <Loading content=\"Loading profile...\" />\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile &&\r\n        <Fragment>\r\n          <ProfileHeader profile={profile} />\r\n          <ProfileContent profile={profile} />\r\n      </Fragment>}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router';\r\nimport { useStore } from '../stores/store';\r\n\r\ninterface Props extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n  const {userStore: {isLoggedIn}} = useStore();\r\n\r\n  return (\r\n    <Route {...rest} render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />} />\r\n  );\r\n}\r\n","import { Fragment, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport LoginForm from '../../features/users/LoginForm';\nimport { useStore } from '../stores/store';\nimport Loading from './Loading';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <Loading content=\"Loading app...\" />\n\n  return (\n    <Fragment>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n\n      <Route exact path='/' component={HomePage} />\n\n      <Route \n        path={'/(.+)'}\n        render={() => (\n          <Fragment>\n            <NavBar />\n\n            <Container style={{marginTop: '7em'}}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute path={['/createActivity', '/manage/:id']} component={ActivityForm} key={location.key} />\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <Route path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route path='/login' component={LoginForm} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nexport default function ScrollToTop() {\r\n  const {pathname} = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  // <React.StrictMode>\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}